@page "/"
@rendermode InteractiveServer // maybe change later when we have built the api (and can use WASM)

@using Data.Models.Interfaces
@using Data.Models

@inject IBlogApi _api

<ul>
    <Virtualize ItemsProvider="LoadPosts" Context="p">
        <li><a href="/Post/@p.Id">@p.Title</a></li>
    </Virtualize>
</ul>

@code {
    public int TotalBlogPosts { get; set; }
    
    private async ValueTask<ItemsProviderResult<BlogPost>> LoadPosts(ItemsProviderRequest request) 
    {
        if (TotalBlogPosts == 0) 
        {
            TotalBlogPosts = await _api.GetBlogPostCountAsync();
        }    

        var numBlogPosts = Math.Min(request.Count, TotalBlogPosts - request.StartIndex);
        var blogPosts = await _api.GetBlogPostsAsync(numBlogPosts, request.StartIndex);
        return new ItemsProviderResult<BlogPost>(blogPosts, TotalBlogPosts);
    }
}